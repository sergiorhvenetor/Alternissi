"""
Django settings for alternissi_project project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-0#6l*zzjq9jm&$s=y)e5%7n&qui*@3_k#331#ia5@msfolmu61'
# In production, SECRET_KEY should be loaded from an environment variable
DEBUG = os.environ.get('DJANGO_DEBUG', 'True') == 'True' # Leer DEBUG desde variable de entorno, default a True para desarrollo

SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY')
if DEBUG and not SECRET_KEY:
    SECRET_KEY = 'django-insecure-0#6l*zzjq9jm&$s=y)e5%7n&qui*@3_k#331#ia5@msfolmu61' # Valor de ejemplo para desarrollo
elif not SECRET_KEY:
    # En producción, la SECRET_KEY DEBE estar configurada vía variable de entorno.
    # Levantar un error si no está disponible y DEBUG es False.
    raise ValueError("DJANGO_SECRET_KEY no está configurada en el entorno y DEBUG es False.")

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG should be False in production. The value might depend on the environment.
# DEBUG = False # Comentado o eliminado, DEBUG se define arriba

# In production, this should be a list of allowed domains.
if DEBUG:
    ALLOWED_HOSTS = ['localhost', '127.0.0.1', '*'] # '*' es conveniente para algunos entornos de desarrollo como contenedores
else:
    # IMPORTANTE: En producción, esta lista DEBE contener los nombres de host/dominio
    # a los que tu aplicación Django servirá. Usar ['*'] en producción con DEBUG=False
    # es un RIESGO DE SEGURIDAD.
    # Ejemplo: ALLOWED_HOSTS = ['www.misitio.com', 'api.misitio.com']
    # Por ahora, si no se especifica vía variable de entorno, se dejará ['*']
    # pero se emitirá una advertencia si DEBUG es False.
    allowed_hosts_env = os.environ.get('DJANGO_ALLOWED_HOSTS')
    if allowed_hosts_env:
        ALLOWED_HOSTS = [host.strip() for host in allowed_hosts_env.split(',')]
    else:
        ALLOWED_HOSTS = ['*'] # Mantener '*' como default si no hay variable de entorno
                              # pero el siguiente bloque advertirá si DEBUG es False.

if not DEBUG and ALLOWED_HOSTS == ['*']:
    import warnings
    warnings.warn(
        "ADVERTENCIA DE SEGURIDAD: DEBUG es False y ALLOWED_HOSTS es ['*']. "
        "Esto es INSEGURO para producción. Debes configurar DJANGO_ALLOWED_HOSTS "
        "con tus dominios permitidos."
    )


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'post',  # Custom app for the project
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'alternissi_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'post.context_processors.cart_processor',
                'post.context_processors.tienda_config_processor', # Added tienda_config processor
            ],
        },
    },
]

WSGI_APPLICATION = 'alternissi_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'es-es'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'

# Media files (Uploads)
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# --- Autenticación ---
LOGIN_REDIRECT_URL = '/cuenta/' # o reverse_lazy('tienda:cuenta_dashboard')
LOGOUT_REDIRECT_URL = '/'      # o reverse_lazy('tienda:inicio')
# LOGIN_URL = '/login/' # Django por defecto usa /accounts/login/, pero lo hemos definido en post.urls

# --- Email (para reseteo de contraseña en desarrollo) ---
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
DEFAULT_FROM_EMAIL = 'noreply@mitienda.com'
