# Generated by Django 5.2.3 on 2025-06-11 02:18

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EtiquetaProducto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creado', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('actualizado', models.DateTimeField(auto_now=True)),
                ('nombre', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(allow_unicode=True, unique=True)),
                ('color', models.CharField(default='#000000', max_length=7)),
            ],
            options={
                'verbose_name': 'etiqueta de producto',
                'verbose_name_plural': 'etiquetas de producto',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creado', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('actualizado', models.DateTimeField(auto_now=True)),
                ('nombre', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(allow_unicode=True, max_length=100, unique=True)),
                ('descripcion', models.TextField(blank=True)),
                ('imagen', models.ImageField(blank=True, null=True, upload_to='categorias/')),
                ('activo', models.BooleanField(default=True)),
                ('orden', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'categoría',
                'verbose_name_plural': 'categorías',
                'ordering': ['orden', 'nombre'],
                'indexes': [models.Index(fields=['nombre'], name='post_catego_nombre_c14575_idx'), models.Index(fields=['activo'], name='post_catego_activo_9a07c9_idx')],
            },
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creado', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('actualizado', models.DateTimeField(auto_now=True)),
                ('nombre', models.CharField(max_length=100)),
                ('apellido', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('telefono', models.CharField(blank=True, max_length=20)),
                ('direccion', models.TextField(blank=True)),
                ('ciudad', models.CharField(blank=True, max_length=100)),
                ('codigo_postal', models.CharField(blank=True, max_length=20)),
                ('pais', models.CharField(blank=True, max_length=100)),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
                ('acepta_marketing', models.BooleanField(default=False)),
                ('usuario', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cliente', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['apellido', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='ConfiguracionTienda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_tienda', models.CharField(max_length=100)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='configuracion/')),
                ('logo_alt_text', models.CharField(blank=True, max_length=125)),
                ('moneda', models.CharField(default='USD', max_length=10)),
                ('simbolo_moneda', models.CharField(default='$', max_length=1)),
                ('impuesto', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('costo_envio', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('minimo_compra_envio_gratis', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('telefono_contacto', models.CharField(blank=True, max_length=20)),
                ('email_contacto', models.EmailField(blank=True, max_length=254)),
                ('direccion', models.TextField(blank=True)),
                ('horario_atencion', models.CharField(blank=True, max_length=100)),
                ('redes_sociales', models.JSONField(blank=True, default=dict)),
                ('politica_privacidad', models.TextField(blank=True)),
                ('terminos_condiciones', models.TextField(blank=True)),
                ('activo', models.BooleanField(default=True)),
                ('modo_mantenimiento', models.BooleanField(default=False, help_text='Cuando está activo, solo los superusuarios pueden acceder al sitio.')),
                ('mensaje_mantenimiento', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'configuración de tienda',
                'verbose_name_plural': 'configuraciones de tienda',
                'constraints': [models.CheckConstraint(condition=models.Q(('impuesto__gte', 0)), name='impuesto_positivo'), models.CheckConstraint(condition=models.Q(('costo_envio__gte', 0)), name='costo_envio_positivo')],
            },
        ),
        migrations.CreateModel(
            name='Cupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creado', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('actualizado', models.DateTimeField(auto_now=True)),
                ('codigo', models.CharField(max_length=50, unique=True)),
                ('descripcion', models.TextField(blank=True)),
                ('tipo_descuento', models.CharField(choices=[('porcentaje', 'Porcentaje'), ('fijo', 'Monto Fijo')], default='porcentaje', max_length=10)),
                ('descuento', models.DecimalField(decimal_places=2, max_digits=10)),
                ('fecha_inicio', models.DateTimeField()),
                ('fecha_fin', models.DateTimeField()),
                ('max_usos', models.PositiveIntegerField(default=0)),
                ('usos_actuales', models.PositiveIntegerField(default=0, editable=False)),
                ('activo', models.BooleanField(default=True)),
                ('minimo_compra', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('solo_nuevos_clientes', models.BooleanField(default=False)),
                ('categorias', models.ManyToManyField(blank=True, to='post.categoria')),
            ],
            options={
                'verbose_name_plural': 'cupones',
                'ordering': ['-fecha_inicio'],
            },
        ),
        migrations.CreateModel(
            name='Carrito',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(blank=True, db_index=True, max_length=40)),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('actualizado', models.DateTimeField(auto_now=True)),
                ('cliente', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='carrito', to='post.cliente')),
                ('cupon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='post.cupon')),
            ],
        ),
        migrations.CreateModel(
            name='Marca',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creado', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('actualizado', models.DateTimeField(auto_now=True)),
                ('nombre', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(allow_unicode=True, max_length=100, unique=True)),
                ('descripcion', models.TextField(blank=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='marcas/')),
                ('activo', models.BooleanField(default=True)),
                ('sitio_web', models.URLField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'marcas',
                'ordering': ['nombre'],
                'indexes': [models.Index(fields=['nombre'], name='post_marca_nombre_0c3660_idx'), models.Index(fields=['activo'], name='post_marca_activo_3d988c_idx')],
            },
        ),
        migrations.CreateModel(
            name='Pedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creado', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('actualizado', models.DateTimeField(auto_now=True)),
                ('codigo', models.CharField(editable=False, help_text='Código único del pedido', max_length=20, unique=True)),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('procesando', 'Procesando'), ('enviado', 'Enviado'), ('completado', 'Completado'), ('cancelado', 'Cancelado'), ('reembolsado', 'Reembolsado')], default='pendiente', max_length=20)),
                ('metodo_pago', models.CharField(choices=[('tarjeta', 'Tarjeta de Crédito/Débito'), ('paypal', 'PayPal'), ('transferencia', 'Transferencia Bancaria'), ('contraentrega', 'Contraentrega')], max_length=20)),
                ('direccion_envio', models.JSONField()),
                ('direccion_facturacion', models.JSONField()),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=12)),
                ('descuento', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('impuesto', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('envio', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total', models.DecimalField(decimal_places=2, max_digits=12)),
                ('notas', models.TextField(blank=True)),
                ('transaccion_id', models.CharField(blank=True, max_length=100)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pedidos', to='post.cliente')),
                ('cupon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='post.cupon')),
            ],
            options={
                'verbose_name_plural': 'pedidos',
                'ordering': ['-creado'],
            },
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creado', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('actualizado', models.DateTimeField(auto_now=True)),
                ('nombre', models.CharField(max_length=200)),
                ('slug', models.SlugField(allow_unicode=True, max_length=200, unique=True)),
                ('sku', models.CharField(default=uuid.uuid4, editable=False, max_length=50, unique=True)),
                ('descripcion', models.TextField()),
                ('caracteristicas', models.JSONField(blank=True, default=dict)),
                ('precio', models.DecimalField(decimal_places=2, max_digits=12)),
                ('precio_descuento', models.DecimalField(blank=True, decimal_places=2, help_text='Si se especifica, será el precio mostrado como oferta.', max_digits=12, null=True)),
                ('talla', models.CharField(choices=[('XS', 'Extra Small'), ('S', 'Small'), ('M', 'Medium'), ('L', 'Large'), ('XL', 'Extra Large'), ('XXL', 'Extra Extra Large'), ('U', 'Única')], default='U', max_length=4)),
                ('genero', models.CharField(choices=[('H', 'Hombre'), ('M', 'Mujer'), ('U', 'Unisex'), ('N', 'Niño')], default='U', max_length=1)),
                ('color', models.CharField(max_length=50)),
                ('material', models.CharField(max_length=100)),
                ('stock', models.PositiveIntegerField()),
                ('disponible', models.BooleanField(default=True)),
                ('destacado', models.BooleanField(default=False)),
                ('nuevo', models.BooleanField(default=False)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='productos', to='post.categoria')),
                ('etiquetas', models.ManyToManyField(blank=True, to='post.etiquetaproducto')),
                ('marca', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='productos', to='post.marca')),
            ],
            options={
                'ordering': ['-creado'],
            },
        ),
        migrations.CreateModel(
            name='ListaDeseos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('actualizado', models.DateTimeField(auto_now=True)),
                ('cliente', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='lista_deseos', to='post.cliente')),
                ('productos', models.ManyToManyField(to='post.producto')),
            ],
            options={
                'verbose_name': 'lista de deseos',
                'verbose_name_plural': 'listas de deseos',
            },
        ),
        migrations.CreateModel(
            name='ItemCarrito',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.PositiveIntegerField(default=1)),
                ('precio', models.DecimalField(decimal_places=2, max_digits=12)),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('actualizado', models.DateTimeField(auto_now=True)),
                ('carrito', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='post.carrito')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='post.producto')),
            ],
            options={
                'verbose_name': 'ítem de carrito',
                'verbose_name_plural': 'ítems de carrito',
            },
        ),
        migrations.CreateModel(
            name='ImagenProducto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creado', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('actualizado', models.DateTimeField(auto_now=True)),
                ('imagen', models.ImageField(help_text='Imagen del producto (recomendado 800x800px)', upload_to='productos/')),
                ('orden', models.PositiveIntegerField(default=0)),
                ('principal', models.BooleanField(default=False)),
                ('alt_text', models.CharField(blank=True, help_text='Texto alternativo para accesibilidad (SEO)', max_length=125)),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='imagenes', to='post.producto')),
            ],
            options={
                'verbose_name': 'imagen de producto',
                'verbose_name_plural': 'imágenes de producto',
                'ordering': ['orden'],
            },
        ),
        migrations.CreateModel(
            name='DetallePedido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creado', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('actualizado', models.DateTimeField(auto_now=True)),
                ('precio', models.DecimalField(decimal_places=2, max_digits=12)),
                ('cantidad', models.PositiveIntegerField()),
                ('subtotal', models.DecimalField(decimal_places=2, editable=False, max_digits=12)),
                ('pedido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detalles', to='post.pedido')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ventas', to='post.producto')),
            ],
            options={
                'verbose_name': 'detalle de pedido',
                'verbose_name_plural': 'detalles de pedido',
                'ordering': ['pedido'],
            },
        ),
        migrations.AddField(
            model_name='cupon',
            name='productos',
            field=models.ManyToManyField(blank=True, to='post.producto'),
        ),
        migrations.CreateModel(
            name='Resena',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creado', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('actualizado', models.DateTimeField(auto_now=True)),
                ('titulo', models.CharField(max_length=200)),
                ('comentario', models.TextField()),
                ('calificacion', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('aprobado', models.BooleanField(default=False)),
                ('respuesta', models.TextField(blank=True)),
                ('respuesta_fecha', models.DateTimeField(blank=True, null=True)),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resenas', to='post.cliente')),
                ('producto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resenas', to='post.producto')),
            ],
            options={
                'verbose_name': 'reseña',
                'verbose_name_plural': 'reseñas',
                'ordering': ['-creado'],
            },
        ),
        migrations.AddIndex(
            model_name='cliente',
            index=models.Index(fields=['apellido', 'nombre'], name='post_client_apellid_309b60_idx'),
        ),
        migrations.AddIndex(
            model_name='cliente',
            index=models.Index(fields=['email'], name='post_client_email_c9b724_idx'),
        ),
        migrations.AddIndex(
            model_name='carrito',
            index=models.Index(fields=['session_key'], name='post_carrit_session_76c313_idx'),
        ),
        migrations.AddIndex(
            model_name='pedido',
            index=models.Index(fields=['codigo'], name='post_pedido_codigo_8c592d_idx'),
        ),
        migrations.AddIndex(
            model_name='pedido',
            index=models.Index(fields=['estado'], name='post_pedido_estado_f224d3_idx'),
        ),
        migrations.AddIndex(
            model_name='pedido',
            index=models.Index(fields=['cliente'], name='post_pedido_cliente_9e69d9_idx'),
        ),
        migrations.AddIndex(
            model_name='pedido',
            index=models.Index(fields=['creado'], name='post_pedido_creado_4fafa7_idx'),
        ),
        migrations.AddIndex(
            model_name='producto',
            index=models.Index(fields=['nombre'], name='post_produc_nombre_eea1f7_idx'),
        ),
        migrations.AddIndex(
            model_name='producto',
            index=models.Index(fields=['precio'], name='post_produc_precio_65c796_idx'),
        ),
        migrations.AddIndex(
            model_name='producto',
            index=models.Index(fields=['disponible'], name='post_produc_disponi_ad9e05_idx'),
        ),
        migrations.AddIndex(
            model_name='producto',
            index=models.Index(fields=['destacado'], name='post_produc_destaca_f47da4_idx'),
        ),
        migrations.AddIndex(
            model_name='producto',
            index=models.Index(fields=['nuevo'], name='post_produc_nuevo_5783fd_idx'),
        ),
        migrations.AddIndex(
            model_name='producto',
            index=models.Index(fields=['categoria', 'disponible'], name='post_produc_categor_bf1920_idx'),
        ),
        migrations.AddConstraint(
            model_name='producto',
            constraint=models.CheckConstraint(condition=models.Q(('precio__gte', 0)), name='precio_positivo'),
        ),
        migrations.AddConstraint(
            model_name='producto',
            constraint=models.CheckConstraint(condition=models.Q(('precio_descuento__isnull', True), ('precio_descuento__lt', models.F('precio')), _connector='OR'), name='descuento_valido'),
        ),
        migrations.AlterUniqueTogether(
            name='itemcarrito',
            unique_together={('carrito', 'producto')},
        ),
        migrations.AddConstraint(
            model_name='imagenproducto',
            constraint=models.UniqueConstraint(condition=models.Q(('principal', True)), fields=('producto', 'principal'), name='unica_imagen_principal'),
        ),
        migrations.AddIndex(
            model_name='cupon',
            index=models.Index(fields=['codigo'], name='post_cupon_codigo_fc758e_idx'),
        ),
        migrations.AddIndex(
            model_name='cupon',
            index=models.Index(fields=['activo'], name='post_cupon_activo_50d2b2_idx'),
        ),
        migrations.AddIndex(
            model_name='cupon',
            index=models.Index(fields=['fecha_inicio', 'fecha_fin'], name='post_cupon_fecha_i_d61715_idx'),
        ),
        migrations.AddConstraint(
            model_name='resena',
            constraint=models.CheckConstraint(condition=models.Q(('calificacion__gte', 1), ('calificacion__lte', 5)), name='calificacion_rango_valido'),
        ),
        migrations.AlterUniqueTogether(
            name='resena',
            unique_together={('producto', 'cliente')},
        ),
    ]
